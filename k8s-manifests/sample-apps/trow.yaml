apiVersion: v1
kind: ServiceAccount
metadata:
  name: trow
  labels:
    app: trow
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: trow
  labels:
    app: trow
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - create
  - patch
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: trow
  labels:
    app: trow
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - get
  - watch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: trow
  labels:
    app: trow
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: trow
subjects:
- kind: ServiceAccount
  name: trow
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: trow
  labels:
    app: trow
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: trow
subjects:
- kind: ServiceAccount
  name: trow
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trow-deploy
spec:
  selector:
    matchLabels:
      app: trow
  template:
    metadata:
      labels:
        app: trow
    spec:
      serviceAccountName: trow
      containers:
      - name: trow-pod
        image: containersol/trow
        #image: amouat/trow-test
        args: ["-n", "trow:31000 trow.default:31000", "--no-tls","--proxy-docker-hub"]
        imagePullPolicy: Always
        ports:
        - name: trow-port
          containerPort: 8000
        volumeMounts:
        - mountPath: /certs
          name: cert-vol
        - mountPath: /data
          name: data-vol
#        livenessProbe:
#          httpGet:
#            path: /healthz
#            port: trow-port
#            scheme: HTTPS
#        readinessProbe:
#          httpGet:
#            path: /readiness
#            port: trow-port
#            scheme: HTTPS
      initContainers:
      - name: trow-init
        image: containersol/trow:init
        command: ["/init.sh"]
        imagePullPolicy: Always
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        volumeMounts:
        - mountPath: /certs
          name: cert-vol
      volumes:
        - name: cert-vol
          emptyDir:
            medium: Memory
        - name: data-vol
          emptyDir: {}
      securityContext:
        runAsUser: 333333
        runAsGroup: 333333
        fsGroup: 333333
---
apiVersion: v1
kind: Service
metadata:
  name: trow
spec:
  selector:
    app: trow
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
    nodePort: 31000
