{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The Azure location of the AKS resource."
            }
        },
        "osDiskSizeGB": {
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 1023,
            "type": "int",
            "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            }
        },
        "agentCount": {
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 50,
            "type": "int",
            "metadata": {
                "description": "The number of agent nodes for the cluster. Production workloads have a recommended minimum of 3."
            }
        },
        "VMSize": {
            "defaultValue": "Standard_B2s",
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "osType": {
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "enableHttpApplicationRouting": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "boolean flag to turn on and off of http application routing"
            }
        },
        "networkPlugin": {
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "defaultValue": "azure",
            "type": "string",
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "maxPods": {
            "defaultValue": 30,
            "type": "int",
            "metadata": {
                "description": "Maximum number of pods that can run on a node."
            }
        },
        "enableRBAC": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "boolean flag to turn on and off of RBAC"
            }
        },
        "serviceCidr": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "defaultValue": "10.0.0.10",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "defaultValue": "172.17.0.1/16",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        },
        "scenarioPrefix": {
            "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 8)]",
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        }
    },
    "variables": {
        "clusterName": "[concat(parameters('scenarioPrefix'),'-aks-cni')]",
        "vNet": {
            "name": "[concat(parameters('scenarioPrefix'),'-Vnet')]",
            "addressSpacePrefix": "172.19.0.0/16",
            "subnetName": "subnet1",
            "subnetPrefix": "172.19.10.0/24",
            "subnetName2": "subnet2",
            "subnet2Prefix": "172.19.17.0/24",
            "gatewayName": "vNet1-Gateway",
            "gatewaySubnetPrefix": "172.19.255.0/28",
            "gatewayPublicIPName": "[concat('gw1pip', uniqueString(resourceGroup().id))]"
        }
    },
    "resources": [
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet').name]",
            "location": "[resourceGroup().location]",
            "comments": "This is the first vNet",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet').subnetPrefix]"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('vNet').gatewaySubnetPrefix]"
                        }
                    },
                    {
                        "name": "[variables('vNet').subnetName2]",
                        "properties": {
                            "addressPrefix": "[variables('vNet').subnet2Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "name": "[variables('clusterName')]",
            "apiVersion": "2020-03-01",
            "location": "[parameters('location')]",
            "tags": {
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet').name)]"
            ],
            "properties": {
                "dnsPrefix": "[parameters('scenarioPrefix')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    }
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('VMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet').name,variables('vNet').subnetName)]",
                        "maxPods": "[parameters('maxPods')]",
                        "mode": "System",
                        "type": "VirtualMachineScaleSets"
                    }
                ],
                "windowsProfile": {
                    "adminUsername": "sysadmin",
                    "adminPassword": "Abcd!234567890"
                },
                "networkProfile": {
                    "networkPlugin": "[parameters('networkPlugin')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
                    "loadBalancerSku": "Standard"
                }
            },
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "ClusterSubnetRoleAssignmentDeployment",
            "apiVersion": "2017-05-10",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet').name)]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                    },
                    "variables": {
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                            "apiVersion": "2017-05-01",
                            "name": "[concat(variables('vNet').name,'/', variables('vNet').subnetName,'/Microsoft.Authorization/', guid(resourceGroup().id, deployment().name))]",
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                                "principalId": "[reference(variables('clusterName')).identityProfile.kubeletidentity.objectId]",
                                "scope": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('vNet').name, '/subnets/', variables('vNet').subnetName)]"
                            }
                        }
                    ]
                }
            }
        }
    ]
}
