{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "defaultValue": "sysadmin",
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "defaultValue": "Abcd!2345678",
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "16.04.0-LTS",
                "18.04-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "autoShutdownStatus": {
            "defaultValue": "Enabled",
            "type": "string"
        },
        "scenarioPrefix": {
            "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 8)]",
            "type": "string",
            "metadata": {
                "description": "A notation of uuid from the current RG for this deployment."
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "nicName": "myVMNic",
        "publicIPAddressName": "[concat(parameters('scenarioPrefix'),'-PublicIp')]",
        "publicIPAddressType": "Dynamic",
        "vmName": "[concat(parameters('scenarioPrefix'),'-VM')]",
        "vNet1": {
            "name": "[concat(parameters('scenarioPrefix'),'-Vnet1')]",
            "addressSpacePrefix": "172.19.1.0/28",
            "subnetName": "subnet1",
            "subnetPrefix": "172.19.1.0/29",
            "connectionName": "vNet1-to-vNet2"
        },
        "vNet2": {
            "name": "[concat(parameters('scenarioPrefix'),'-Vnet2')]",
            "addressSpacePrefix": "172.19.1.16/28",
            "subnetName": "subnet1",
            "subnetPrefix": "172.19.1.16/29",
            "connectionName": "vNet2-to-vNet1"
        },
        "autoShutdown": {
            "autoShutdownTime": "19:00",
            "autoShutdownTimeZone": "UTC",
            "autoShutdownNotificationStatus": "Disabled",
            "autoShutdownNotificationLocale": "en"
        }
    },
    "resources": [
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables(concat('vNet',copyIndex(1))).name]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vnet-copy",
                "count": 2
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables(concat('vNet',copyIndex(1))).addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables(concat('vNet',copyIndex(1))).subnetName]",
                        "properties": {
                            "addressPrefix": "[variables(concat('vNet',copyIndex(1))).subnetPrefix]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('vNet1').name,'/peering')]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-12-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/',variables('vNet1').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks/',variables('vNet2').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/',variables('vNet2').name)]"
                }
            }
        },
        {
            "name": "[concat(variables('vNet2').name,'/peering')]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-12-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/',variables('vNet1').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks/',variables('vNet2').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/',variables('vNet1').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-11-01",
            "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "pip-copy",
                "count": 2
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-11-01",
            "name": "[concat(variables('nicName'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/',concat(variables('publicIpAddressName'), copyIndex()))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', concat(parameters('scenarioPrefix'),'-Vnet', copyIndex(1)))]"
            ],
            "copy": {
                "name": "nic-copy",
                "count": 2
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('scenarioPrefix'),'-Vnet', copyIndex(1)), 'subnet1')]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(variables('publicIpAddressName'), copyIndex()))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[concat(variables('vmName'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('nicName'), copyIndex()))]"
            ],
            "copy": {
                "name": "vmcopy",
                "count": 2
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), copyIndex()))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat('shutdown-computevm-', variables('vmName'), copyIndex())]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2018-09-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', concat(variables('vmName'), copyIndex()))]"
            ],
            "copy": {
                "name": "schedcopy",
                "count": 2
            },
            "properties": {
                "status": "[parameters('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdown').autoShutdownTime]"
                },
                "timeZoneId": "[variables('autoShutdown').autoShutdownTimeZone]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmName'), copyIndex()))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdown').autoShutdownNotificationStatus]",
                    "notificationLocale": "[variables('autoShutdown').autoShutdownNotificationLocale]",
                    "timeInMinutes": 30
                }
            }
        }
    ]
}
