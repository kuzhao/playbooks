{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "administratorLogin": {
            "type": "string",
            "defaultValue": "pgadmin",
            "metadata": {
                "description": "Database administrator login name"
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "defaultValue": "Abcd!2345678",
            "metadata": {
                "description": "Database administrator password"
            }
        },
        "scenarioPrefix": {
            "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 8)]",
            "type": "string",
            "metadata": {
                "description": "A notation of uuid from the current RG for this deployment."
            }
        }
    },
    "variables": {
        "siteName": "[concat(parameters('scenarioPrefix'),'-website')]",
        "databaseName": "[concat(parameters('scenarioPrefix'), 'database')]",
        "serverName": "[concat(parameters('scenarioPrefix'), 'pgserver')]",
        "hostingPlanName": "[concat(parameters('scenarioPrefix'), 'serviceplan')]",
        "applicationGatewayName": "applicationGateway1",
        "publicIPAddressName": "publicIp1",
        "publicIPAddressType": "Static",
        "vNet": {
            "name": "[concat(parameters('scenarioPrefix'),'Vnet')]",
            "addressSpacePrefix": "172.19.0.0/16",
            "subnetName": "appGatewaySubnet",
            "subnetPrefix": "172.19.10.0/24"
        },
        "databaseSkuName":"B_Gen5_2",
        "databaseSkuSizeMB": 51200,
        "databaseSkuTier": "Basic",
        "postgresqlVersion": "9.6",
        "databaseSkucapacity": 2,
        "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',variables('applicationGatewayName'))]"
    },
    "resources": [
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "sku": {
                "name": "Standard"
            },
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet').name]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet').subnetPrefix]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-12-01",
            "name": "[variables('applicationGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vNet').name)]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2",
                    "capacity": 1
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNet').name, variables('vNet').subnetName)]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "appGatewayFrontendPort",
                        "properties": {
                            "Port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "appGatewayBackendPool",
                        "properties": {
                            "BackendAddresses": [
                                {
                                    "IpAddress": "[concat(variables('siteName'),'1.azurewebsites.net')]"
                                },
                                {
                                    "IpAddress": "[concat(variables('siteName'),'2.azurewebsites.net')]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "appGatewayBackendHttpSettings",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "CookieBasedAffinity": "Disabled",
                            "PickHostNameFromBackendAddress": true,
                            "ProbeEnabled": true,
                            "Probe": {
                                "id": "[concat(variables('applicationGatewayID'), '/probes/Probe1')]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "appGatewayHttpListener",
                        "properties": {
                            "FrontendIPConfiguration": {
                                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "FrontendPort": {
                                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
                            },
                            "Protocol": "Http",
                            "SslCertificate": null
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "rule1",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "Name": "Probe1",
                        "properties": {
                            "Protocol": "Http",
                            "Path": "/",
                            "Interval": 30,
                            "Timeout": 10,
                            "UnhealthyThreshold": 3,
                            "MinServers": 0,
                            "PickHostNameFromBackendHttpSettings": true
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "name": "[concat(variables('siteName'), copyIndex())]",
            "dependsOn": [
                "[variables('hostingPlanName')]"
            ],
            "copy":{
                "name": "web-copy",
                "count": 2
            },
            "properties": {
                "siteConfig": {
                    "linuxFxVersion": "node|6.10",
                    "connectionStrings": [
                        {
                            "name": "defaultConnection",
                            "ConnectionString": "[concat('Database=', variables('databaseName'), copyIndex(), ';Server=', reference(resourceId('Microsoft.DBforPostgreSQL/servers',variables('serverName'))).fullyQualifiedDomainName, ';User Id=',parameters('administratorLogin'),'@',variables('serverName') ,';Password=',parameters('administratorLoginPassword'))]",
                            "type": "PostgreSQL"
                        }
                    ]
                },
                "name": "[concat(variables('siteName'), copyIndex())]",
                "serverFarmId": "[variables('hostingPlanName')]",
                "hostingEnvironment": ""
            },
            "apiVersion": "2021-03-01",
            "location": "[resourceGroup().location]"
        },        
        {
            "apiVersion": "2016-09-01",
            "name": "[variables('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "workerSizeId": "1",
                "reserved": true,
                "numberOfWorkers": "1",
                "hostingEnvironment": ""
            },
            "sku": {
                "Tier": "Standard",
                "Name": "S1"
            }
        },
        {
            "apiVersion": "2017-12-01",
            "kind": "",
            "location": "[resourceGroup().location]",
            "name": "[variables('serverName')]",
            "properties": {
                "version": "[variables('postgresqlVersion')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "storageMB": "[variables('databaseSkuSizeMB')]"
            },
            "sku": {
                "name": "[variables('databaseSkuName')]",
                "tier": "[variables('databaseSkuTier')]",
                "capacity": "[variables('databaseSkucapacity')]",
                "size": "[variables('databaseSkuSizeMB')]",
                "family": "Gen5"
            },
            "type": "Microsoft.DBforPostgreSQL/servers",
            "resources": [
                {
                    "type": "firewallRules",
                    "apiVersion": "2017-12-01",
                    "dependsOn": [
                        "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "[concat(variables('serverName'),'firewall')]",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    }
                },
                {
                    "name": "[concat(variables('databaseName'), '1')]",
                    "type": "databases",
                    "apiVersion": "2017-12-01",
                    "properties": {
                        "charset": "utf8",
                        "collation": "English_United States.1252"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
                    ]
                },
                {
                    "name": "[concat(variables('databaseName'), '2')]",
                    "type": "databases",
                    "apiVersion": "2017-12-01",
                    "properties": {
                        "charset": "utf8",
                        "collation": "English_United States.1252"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
                    ]
                }
            ]
        }
    ]
}